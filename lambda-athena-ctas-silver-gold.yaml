AWSTemplateFormatVersion: '2010-09-09'
Description: 'Athena CTAS Lambda Function for SILVER→GOLD Transformation'

Parameters:
  Environment:
    Type: String
    Default: 'prod'
    AllowedValues: ['dev', 'staging', 'prod']
    Description: 'Environment name'
  
  S3OutputLocation:
    Type: String
    Description: 'S3 location for Athena query results'
  
  SilverDatabase:
    Type: String
    Default: 'thera_silver'
    Description: 'Name of the silver database'
  
  GoldDatabase:
    Type: String
    Default: 'thera_gold'
    Description: 'Name of the gold database'
  
  AthenaWorkgroup:
    Type: String
    Default: 'primary'
    Description: 'Athena workgroup name'
  
  TimeoutMinutes:
    Type: Number
    Default: 45
    Description: 'Query timeout in minutes'

Resources:
  # IAM role for Lambda function
  AthenaCTASSilverGoldRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'thera-athena-ctas-silver-gold-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref AthenaCTASSilverGoldPolicy
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # IAM policy for Lambda function
  AthenaCTASSilverGoldPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub 'thera-athena-ctas-silver-gold-policy-${Environment}'
      Description: 'Policy for Athena CTAS SILVER→GOLD Lambda function'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Athena permissions
          - Effect: Allow
            Action:
              - athena:StartQueryExecution
              - athena:StopQueryExecution
              - athena:GetQueryExecution
              - athena:GetQueryResults
              - athena:GetWorkGroup
              - athena:ListQueryExecutions
            Resource: '*'

          # S3 permissions for query results and data
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
            Resource:
              - !Sub 'arn:aws:s3:::${S3OutputLocation}/*'
              - !Sub 'arn:aws:s3:::${S3OutputLocation}'

          # Glue Data Catalog permissions
          - Effect: Allow
            Action:
              - glue:GetDatabase
              - glue:GetDatabases
              - glue:GetTable
              - glue:GetTables
              - glue:GetPartition
              - glue:GetPartitions
              - glue:CreateTable
              - glue:UpdateTable
              - glue:DeleteTable
              - glue:BatchCreatePartition
              - glue:BatchDeletePartition
              - glue:GetPartitionIndexes
            Resource: '*'

  # Lambda function
  AthenaCTASSilverGoldFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Sub 'thera-athena-ctas-silver-gold-${Environment}'
      Runtime: python3.9
      Handler: lambda-athena-ctas-silver-gold.lambda_handler
      Role: !GetAtt AthenaCTASSilverGoldRole.Arn
      Timeout: 2700  # 45 minutes
      MemorySize: 2048  # Increased memory for complex queries
      Environment:
        Variables:
          ATHENA_WORKGROUP: !Ref AthenaWorkgroup
          S3_OUTPUT_LOCATION: !Ref S3OutputLocation
          SILVER_DATABASE: !Ref SilverDatabase
          GOLD_DATABASE: !Ref GoldDatabase
          TIMEOUT_MINUTES: !Ref TimeoutMinutes
      Code:
        ZipFile: |
          # Placeholder - actual code will be deployed via CI/CD
          def lambda_handler(event, context):
              return {'statusCode': 200, 'body': 'Athena CTAS SILVER→GOLD Lambda'}
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: 'Athena CTAS SILVER to GOLD'

  # CloudWatch Log Group
  AthenaCTASSilverGoldLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/lambda/thera-athena-ctas-silver-gold-${Environment}'
      RetentionInDays: 30

  # CloudWatch Alarms
  AthenaCTASSilverGoldErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: !Sub 'thera-athena-ctas-silver-gold-errors-${Environment}'
      AlarmDescription: 'Alarm for Athena CTAS SILVER→GOLD Lambda errors'
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref AthenaCTASSilverGoldFunction

  AthenaCTASSilverGoldDurationAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: !Sub 'thera-athena-ctas-silver-gold-duration-${Environment}'
      AlarmDescription: 'Alarm for Athena CTAS SILVER→GOLD Lambda duration'
      MetricName: Duration
      Namespace: AWS/Lambda
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 2400000  # 40 minutes in milliseconds
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref AthenaCTASSilverGoldFunction

  # Custom CloudWatch metrics for data quality
  DataQualityAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: !Sub 'thera-athena-ctas-silver-gold-data-quality-${Environment}'
      AlarmDescription: 'Alarm when data quality metrics are low'
      MetricName: DataQualityScore
      Namespace: Thera/DataQuality
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 0.8  # 80% data quality score
      ComparisonOperator: LessThanThreshold
      TreatMissingData: notBreaching

Outputs:
  AthenaCTASSilverGoldFunctionArn:
    Description: 'ARN of the Athena CTAS SILVER→GOLD Lambda function'
    Value: !GetAtt AthenaCTASSilverGoldFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-AthenaCTASSilverGoldFunctionArn'

  AthenaCTASSilverGoldFunctionName:
    Description: 'Name of the Athena CTAS SILVER→GOLD Lambda function'
    Value: !Ref AthenaCTASSilverGoldFunction
    Export:
      Name: !Sub '${AWS::StackName}-AthenaCTASSilverGoldFunctionName'
